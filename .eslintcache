[{"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignUp/index.tsx":"1","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/index.tsx":"2","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/styles.ts":"3","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Button/index.tsx":"4","/Users/dev/dev/gostack/gobarber/gobarber-web/src/utils/getValidationErrors.ts":"5","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/index.tsx":"6","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/styles.ts":"7","/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/index.tsx":"8","/Users/dev/dev/gostack/gobarber/gobarber-web/src/App.tsx":"9","/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/styles.ts":"10"},{"size":1892,"mtime":1607979805655,"results":"11","hashOfConfig":"12"},{"size":1785,"mtime":1608032635134,"results":"13","hashOfConfig":"12"},{"size":1076,"mtime":1608034357817,"results":"14","hashOfConfig":"12"},{"size":307,"mtime":1607956297541,"results":"15","hashOfConfig":"16"},{"size":323,"mtime":1607979667381,"results":"17","hashOfConfig":"12"},{"size":376,"mtime":1608032725501,"results":"18","hashOfConfig":"12"},{"size":862,"mtime":1608034619324,"results":"19","hashOfConfig":"12"},{"size":1746,"mtime":1608035740610,"results":"20","hashOfConfig":"12"},{"size":272,"mtime":1608035094775,"results":"21","hashOfConfig":"12"},{"size":1395,"mtime":1607957107234,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"x5b9pk",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ecer4w",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignUp/index.tsx",["45"],"import React, { useCallback, useRef } from 'react';\nimport {\n  FiArrowLeft, FiMail, FiUser, FiLock,\n} from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Container, Content, Background } from './styles';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const handleSubmit = useCallback(async (data: Record<string, any>) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string()\n          .required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um e-mail válido'),\n        password: Yup.string()\n          .min(6, 'No mínimo, 6 dígitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      const errors = getValidationErrors(err);\n\n      formRef.current?.setErrors(errors);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} initialData={{ name: 'Leo' }} onSubmit={handleSubmit}>\n          <h1>Faça seu cadastro</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input name=\"password\" icon={FiLock} type=\"password\" placeholder=\"Senha\" />\n\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n\n        <a href=\"forgot\">\n          <FiArrowLeft />\n          Voltar para logon\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/index.tsx",["46"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/styles.ts",[],["47","48","49","50","51","52"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Button/index.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/utils/getValidationErrors.ts",["53"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/index.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/styles.ts",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/index.tsx",["54"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/App.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/styles.ts",[],{"ruleId":"55","severity":1,"message":"56","line":18,"column":64,"nodeType":"57","messageId":"58","endLine":18,"endColumn":67,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":8,"column":8,"nodeType":"62","messageId":"63","endLine":8,"endColumn":15},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":11,"column":22,"nodeType":"78","messageId":"79","endLine":11,"endColumn":33},{"ruleId":"55","severity":1,"message":"56","line":15,"column":64,"nodeType":"57","messageId":"58","endLine":15,"endColumn":67,"suggestions":"80"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["81","82"],"@typescript-eslint/no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","lines-around-directive",["83"],"no-spaced-func",["84"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["85","86"],{"messageId":"87","fix":"88","desc":"89"},{"messageId":"90","fix":"91","desc":"92"},"padding-line-between-statements","func-call-spacing",{"messageId":"87","fix":"93","desc":"89"},{"messageId":"90","fix":"94","desc":"92"},"suggestUnknown",{"range":"95","text":"96"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"95","text":"97"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"98","text":"96"},{"range":"98","text":"97"},[638,641],"unknown","never",[622,625]]