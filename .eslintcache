[{"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignUp/index.tsx":"1","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/index.tsx":"2","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/styles.ts":"3","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Button/index.tsx":"4","/Users/dev/dev/gostack/gobarber/gobarber-web/src/utils/getValidationErrors.ts":"5","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/index.tsx":"6","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/styles.ts":"7","/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/index.tsx":"8","/Users/dev/dev/gostack/gobarber/gobarber-web/src/App.tsx":"9","/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/styles.ts":"10","/Users/dev/dev/gostack/gobarber/gobarber-web/src/context/AuthContext.tsx":"11","/Users/dev/dev/gostack/gobarber/gobarber-web/src/services/api.ts":"12"},{"size":1892,"mtime":1607979805655,"results":"13","hashOfConfig":"14"},{"size":1785,"mtime":1608032635134,"results":"15","hashOfConfig":"14"},{"size":1076,"mtime":1608034357817,"results":"16","hashOfConfig":"14"},{"size":307,"mtime":1607956297541,"results":"17","hashOfConfig":"18"},{"size":323,"mtime":1607979667381,"results":"19","hashOfConfig":"14"},{"size":376,"mtime":1608032725501,"results":"20","hashOfConfig":"14"},{"size":862,"mtime":1608034619324,"results":"21","hashOfConfig":"14"},{"size":1987,"mtime":1608060064855,"results":"22","hashOfConfig":"14"},{"size":370,"mtime":1608052855102,"results":"23","hashOfConfig":"14"},{"size":1395,"mtime":1607957107234,"results":"24","hashOfConfig":"14"},{"size":1488,"mtime":1608059907187,"results":"25","hashOfConfig":"14"},{"size":116,"mtime":1608054414374,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"x5b9pk",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ecer4w",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignUp/index.tsx",["54"],"import React, { useCallback, useRef } from 'react';\nimport {\n  FiArrowLeft, FiMail, FiUser, FiLock,\n} from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Container, Content, Background } from './styles';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const handleSubmit = useCallback(async (data: Record<string, any>) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string()\n          .required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um e-mail válido'),\n        password: Yup.string()\n          .min(6, 'No mínimo, 6 dígitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      const errors = getValidationErrors(err);\n\n      formRef.current?.setErrors(errors);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} initialData={{ name: 'Leo' }} onSubmit={handleSubmit}>\n          <h1>Faça seu cadastro</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input name=\"password\" icon={FiLock} type=\"password\" placeholder=\"Senha\" />\n\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n\n        <a href=\"forgot\">\n          <FiArrowLeft />\n          Voltar para logon\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/index.tsx",["55"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/styles.ts",[],["56","57","58","59","60","61"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Button/index.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/utils/getValidationErrors.ts",["62"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/index.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/styles.ts",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/index.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/App.tsx",[],["63","64","65","66","67","68"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/styles.ts",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/context/AuthContext.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/services/api.ts",[],{"ruleId":"69","severity":1,"message":"70","line":18,"column":64,"nodeType":"71","messageId":"72","endLine":18,"endColumn":67,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":15},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":11,"column":22,"nodeType":"92","messageId":"93","endLine":11,"endColumn":33},{"ruleId":"78","replacedBy":"94"},{"ruleId":"80","replacedBy":"95"},{"ruleId":"82","replacedBy":"96"},{"ruleId":"84","replacedBy":"97"},{"ruleId":"86","replacedBy":"98"},{"ruleId":"88","replacedBy":"99"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["100","101"],"@typescript-eslint/no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","lines-around-directive",["102"],"no-spaced-func",["103"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["102"],["103"],[],[],[],[],{"messageId":"104","fix":"105","desc":"106"},{"messageId":"107","fix":"108","desc":"109"},"padding-line-between-statements","func-call-spacing","suggestUnknown",{"range":"110","text":"111"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"110","text":"112"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[638,641],"unknown","never"]