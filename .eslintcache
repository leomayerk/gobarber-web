[{"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignUp/index.tsx":"1","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/index.tsx":"2","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/styles.ts":"3","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Button/index.tsx":"4","/Users/dev/dev/gostack/gobarber/gobarber-web/src/utils/getValidationErrors.ts":"5","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/index.tsx":"6","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/styles.ts":"7","/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/index.tsx":"8","/Users/dev/dev/gostack/gobarber/gobarber-web/src/App.tsx":"9","/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/styles.ts":"10","/Users/dev/dev/gostack/gobarber/gobarber-web/src/services/api.ts":"11","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/ToastContainer/index.tsx":"12","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/ToastContainer/styles.ts":"13","/Users/dev/dev/gostack/gobarber/gobarber-web/src/hooks/auth.tsx":"14","/Users/dev/dev/gostack/gobarber/gobarber-web/src/hooks/toast.tsx":"15","/Users/dev/dev/gostack/gobarber/gobarber-web/src/styles/global.ts":"16","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Button/styles.ts":"17","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/ToastContainer/Toast/index.tsx":"18"},{"size":1892,"mtime":1607979805655,"results":"19","hashOfConfig":"20"},{"size":1785,"mtime":1608032635134,"results":"21","hashOfConfig":"20"},{"size":1076,"mtime":1608034357817,"results":"22","hashOfConfig":"20"},{"size":307,"mtime":1607956297541,"results":"23","hashOfConfig":"24"},{"size":323,"mtime":1608205683106,"results":"25","hashOfConfig":"20"},{"size":376,"mtime":1608032725501,"results":"26","hashOfConfig":"20"},{"size":862,"mtime":1608034619324,"results":"27","hashOfConfig":"20"},{"size":2307,"mtime":1608217611891,"results":"28","hashOfConfig":"20"},{"size":356,"mtime":1608208560502,"results":"29","hashOfConfig":"20"},{"size":1395,"mtime":1607957107234,"results":"30","hashOfConfig":"20"},{"size":116,"mtime":1608054414374,"results":"31","hashOfConfig":"20"},{"size":472,"mtime":1608216903659,"results":"32","hashOfConfig":"20"},{"size":162,"mtime":1608216079480,"results":"33","hashOfConfig":"20"},{"size":1691,"mtime":1608141616126,"results":"34","hashOfConfig":"20"},{"size":1393,"mtime":1608214637823,"results":"35","hashOfConfig":"20"},{"size":464,"mtime":1607894136383,"results":"36","hashOfConfig":"20"},{"size":381,"mtime":1607957182271,"results":"37","hashOfConfig":"20"},{"size":1259,"mtime":1608217508545,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"x5b9pk",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ecer4w",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignUp/index.tsx",["80"],"import React, { useCallback, useRef } from 'react';\nimport {\n  FiArrowLeft, FiMail, FiUser, FiLock,\n} from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Container, Content, Background } from './styles';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const handleSubmit = useCallback(async (data: Record<string, any>) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string()\n          .required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um e-mail válido'),\n        password: Yup.string()\n          .min(6, 'No mínimo, 6 dígitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      const errors = getValidationErrors(err);\n\n      formRef.current?.setErrors(errors);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} initialData={{ name: 'Leo' }} onSubmit={handleSubmit}>\n          <h1>Faça seu cadastro</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input name=\"password\" icon={FiLock} type=\"password\" placeholder=\"Senha\" />\n\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n\n        <a href=\"forgot\">\n          <FiArrowLeft />\n          Voltar para logon\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/index.tsx",["81"],"import React, {\n  InputHTMLAttributes, useEffect, useRef, useState, useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\nimport { Container, Error } from './styles';\nimport Tooltip from '../Tooltip';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const {\n    fieldName, defaultValue, error, registerField,\n  } = useField(name);\n\n  /* As funções handleInputFocus e handleInputBlur foram criadas - com\n  useCallback para que não seja carregado toda vez as funções chamadas\n  diretamentes no componente */\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value); // !! = booleano\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\n      { Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#C53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n",["82","83","84","85","86","87"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Input/styles.ts",[],["88","89","90","91","92","93"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Button/index.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/utils/getValidationErrors.ts",["94"],"import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    validationErrors[error.path!] = error.message;\n  });\n\n  return validationErrors;\n}\n","/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/index.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Tooltip/styles.ts",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/index.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/App.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/pages/SignIn/styles.ts",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/services/api.ts",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/ToastContainer/index.tsx",["95"],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/ToastContainer/styles.ts",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/hooks/auth.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/hooks/toast.tsx",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/styles/global.ts",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/Button/styles.ts",[],"/Users/dev/dev/gostack/gobarber/gobarber-web/src/components/ToastContainer/Toast/index.tsx",[],{"ruleId":"96","severity":1,"message":"97","line":18,"column":64,"nodeType":"98","messageId":"99","endLine":18,"endColumn":67,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":15},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"105","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},{"ruleId":"109","replacedBy":"119"},{"ruleId":"111","replacedBy":"120"},{"ruleId":"113","replacedBy":"121"},{"ruleId":"115","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":11,"column":22,"nodeType":"125","messageId":"126","endLine":11,"endColumn":33},{"ruleId":"101","severity":1,"message":"127","line":4,"column":24,"nodeType":"103","messageId":"104","endLine":4,"endColumn":32},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["128","129"],"@typescript-eslint/no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","lines-around-directive",["130"],"no-spaced-func",["131"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["130"],["131"],[],[],[],[],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","'useToast' is defined but never used.",{"messageId":"132","fix":"133","desc":"134"},{"messageId":"135","fix":"136","desc":"137"},"padding-line-between-statements","func-call-spacing","suggestUnknown",{"range":"138","text":"139"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"138","text":"140"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[638,641],"unknown","never"]